logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'

#okta:
#  oauth2:
#    issuer: https://dev-15015140.okta.com/oauth2/default
#    client-id: 0oa5rd92hv6mViZem5d6
#    client-secret: b9N4M0-WKkpv2Pe4tTeU-VvavBxhxPMgN5SpVCtg
#    scopes: openid


topic:
  name: audits
  partitions-num: 3
  replication-factor: 1
server:
  port: 8080

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: auditdb
  kafka:
    properties:
      bootstrap.servers: localhost:9092
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: my-microservice
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific.avro.reader: true
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:
